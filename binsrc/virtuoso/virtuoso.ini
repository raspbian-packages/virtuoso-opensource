;
;  virtuoso.ini
;
;  $Id$
;
;  Configuration file for the OpenLink Virtuoso VDBMS Server
;
;
;  Database setup
;
[Database]
DatabaseFile    = virtuoso.db
TransactionFile = virtuoso.trx
ErrorLogFile    = virtuoso.log
ErrorLogLevel   = 7
FileExtend      = 200
Striping        = 0
LogSegments     = 0
TempStorage	= TempDatabase
Storage1	= db1

[TempDatabase]
DatabaseFile    = virtuoso-temp.db
TransactionFile = virtuoso-temp.trx
FileExtend      = 200
Striping        = 0
LogSegments     = 0

[db1]
DatabaseFile    = virtuoso1.db
TransactionFile = virtuoso1.trx
FileExtend      = 200
Striping        = 0
LogSegments     = 0

[db1 Striping]
Segment1 = 100M, db-seg1-1.db, db-seg1-2.db
Segment2 = 100M, db-seg2-1.db
Log1     = gogo1.lgs 100
Log2     = gogo2.lgs 100B
Log3     = gogo3.lgs 10K
Log4     = gogo4.lgs 10M
Log5     = gogo5.lgs 1G

;
;  Server parameters
;
[Parameters]
ServerPort            = 1133
ServerThreads         = 10
CheckpointInterval    = 60
NumberOfBuffers       = 2000
MaxDirtyBuffers       = 1200
MaxCheckpointRemap    = 2000
UnremapQuota          = 0
AtomicDive            = 1
PrefixResultNames     = 0
CaseMode              = 2
DisableMtWrite        = 0
;MinAutoCheckpointSize	= 4000000
CheckpointAuditTrail  = 0
;AutoCheckpointLogSize = 4000000
MaxStaticCursorRows   = 5000
AllowOSCalls          = 0
DirsAllowed	      = /home/virtdev/binsrc/vsp, /home/virtdev/binsrc/tests
DirsDenied	      = /home/virtdev/binsrc/samples
TempDir		      = /var/tmp
ThreadCleanupInterval = 0
ThreadThreshold       = 0

;
; Backup directories setup
;
;  Format of the lines below:
;    BackupDir<number> = <path>
;
;  <number> must be ordered from 1 up.
;
; If no backup directories defined current directory is used if
; backup file does not contain path components (backup file is specified
; without path)
;
BackupDir1 = /tmp
BackupDir2 = /var/tmp

;
; HTTP server parameters
;
; Timeout values are seconds
;
[HTTPServer]
ServerPort = 8421
ServerRoot = .
ServerThreads = 2
MaxKeepAlives = 10
KeepAliveTimeout = 10
MaxCachedProxyConnections = 10
ProxyConnectionCacheTimeout = 15
;POP3Port = 1234
;NewsServerPort = 1235
DavRoot = DAV
;EnabledDavVSP = 0
;SSLPort = 4433
;SSLCertificate = ./virtuoso_cert.pem
;SSLPrivateKey = ./virtuoso_key.pem
DefaultMailServer = localhost:25
;HTTPProxyEnabled = 0
;CallstackOnException = 1

;
; String passed as Server: header to HTTP client
;ServerIdString = Virtuoso
;
; String passed as User-Agent: header to server by HTTP client
;ClientIdString = Mozilla/4.0 (compatible; Virtuoso)
;

[Client]
SQL_QUERY_TIMEOUT  = 0
SQL_TXN_TIMEOUT    = 0
SQL_PREFETCH_ROWS  = 100
SQL_PREFETCH_BYTES = 16000
SQL_NO_CHAR_C_ESCAPE = 1

[AutoRepair]
BadParentLinks = 0
BadDTP         = 0

[Replication]
ServerName     = the_big_server
ServerEnable   = 1
QueueMax       = 50000

[VDB]
VDBDisconnectTimeout	= 1000
;ArrayOptimization	= 1
;NumArrayParameters	= 10
;KeepConnectionOnFixedThread = 1

;
;  Striping setup
;
;  These parameters have only effect when Striping is set to 1 in the
;  [Database] section, in which case the DatabaseFile parameter is ignored.
;
;  With striping, the database is spawned across multiple segments
;  where each segment can have multiple stripes.
;
;  Format of the lines below:
;    Segment<number> = <size>, <stripe file name> [, <stripe file name> .. ]
;
;  <number> must be ordered from 1 up.
;
;  The <size> is the total size of the segment which is equally divided
;  across all stripes spawning the segment. Its specification can be in
;  gigabytes (g), megabytes (m), kilobytes (k) or in database blocks
;  (b, the default)
;
;  Note that the segment size must be a multiple of the database page size
;  which is currently 4k. Also, the segment size must be divisible by the
;  number of stripe files spawning the segment.
;
;  The example below creates a 200 meg database striped on two segments
;  with two stripes of 50 meg and one of 100 meg.
;
;  You can always add more segments to the configuration, but once
;  added, do not change the setup.
;
[Striping]
Segment1 = 100M, db-seg1-1.db, db-seg1-2.db
Segment2 = 100M, db-seg2-1.db
Log1     = gogo1.lgs 100
Log2     = gogo2.lgs 100B
Log3     = gogo3.lgs 10K
Log4     = gogo4.lgs 10M
Log5     = gogo5.lgs 1G

;[Ucms]
;UcmPath	= ../libsrc/langfunc/ucm
;Ucm1 = java-Cp933-1.3-P.ucm,Cp933
;Ucm2 = java-Cp949-1.3-P.ucm,Cp949
