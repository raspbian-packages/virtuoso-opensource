diff -uBbr mono-1.1.7/mono/metadata/appdomain.h mono-1.1.7-patched/mono/metadata/appdomain.h
--- mono-1.1.7/mono/metadata/appdomain.h	2005-04-23 10:24:33.000000000 +0300
+++ mono-1.1.7-patched/mono/metadata/appdomain.h	2005-05-13 18:52:10.000000000 +0300
@@ -101,6 +101,9 @@
 gboolean
 mono_domain_owns_vtable_slot (MonoDomain *domain, gpointer vtable_slot);
 
+MonoAppDomain *
+mono_domain_get_appdomain (MonoDomain *domain);
+
 void
 mono_context_init 				   (MonoDomain *domain);
 
diff -uBbr mono-1.1.7/mono/metadata/domain.c mono-1.1.7-patched/mono/metadata/domain.c
--- mono-1.1.7/mono/metadata/domain.c	2005-04-25 08:35:34.000000000 +0300
+++ mono-1.1.7-patched/mono/metadata/domain.c	2005-05-13 18:52:10.000000000 +0300
@@ -1246,3 +1246,10 @@
 
 	return NULL;
 }
+
+
+MonoAppDomain *
+mono_domain_get_appdomain (MonoDomain *domain)
+{
+  return domain->domain;
+}
diff -uBbr mono-1.1.7/mono/metadata/object.c mono-1.1.7-patched/mono/metadata/object.c
--- mono-1.1.7/mono/metadata/object.c	2005-04-20 18:03:38.000000000 +0300
+++ mono-1.1.7-patched/mono/metadata/object.c	2005-05-13 18:52:10.000000000 +0300
@@ -1657,37 +1657,19 @@
 	mono_runtime_delegate_invoke (delegate, pa, &exc);
 }
 
-/**
- * mono_runtime_run_main:
- * @method: the method to start the application with (usually Main)
- * @argc: number of arguments from the command line
- * @argv: array of strings from the command line
- * @exc: excetption results
- *
- * Execute a standard Main() method (argc/argv contains the
- * executable name). This method also sets the command line argument value
- * needed by System.Environment.
- *
- * 
- */
-int
-mono_runtime_run_main (MonoMethod *method, int argc, char* argv[],
-		       MonoObject **exc)
+
+void
+mono_runtime_init_main_args (int argc, char *argv[], MonoAssembly *assembly)
 {
 	int i;
-	MonoArray *args = NULL;
-	MonoDomain *domain = mono_domain_get ();
 	gchar *utf8_fullpath;
-	int result;
-
-	mono_thread_set_main (mono_thread_current ());
 
 	main_args = g_new0 (char*, argc);
 	num_main_args = argc;
 
 	if (!g_path_is_absolute (argv [0])) {
 		gchar *basename = g_path_get_basename (argv [0]);
-		gchar *fullpath = g_build_filename (method->klass->image->assembly->basedir,
+		gchar *fullpath = g_build_filename (assembly ? assembly->basedir : "",
 						    basename,
 						    NULL);
 
@@ -1729,6 +1711,34 @@
 
 		main_args [i] = utf8_arg;
 	}
+}
+
+/**
+ * mono_runtime_run_main:
+ * @method: the method to start the application with (usually Main)
+ * @argc: number of arguments from the command line
+ * @argv: array of strings from the command line
+ * @exc: excetption results
+ *
+ * Execute a standard Main() method (argc/argv contains the
+ * executable name). This method also sets the command line argument value
+ * needed by System.Environment.
+ *
+ *
+ */
+int
+mono_runtime_run_main (MonoMethod *method, int argc, char* argv[],
+		       MonoObject **exc)
+{
+	int i;
+	MonoArray *args = NULL;
+	MonoDomain *domain = mono_domain_get ();
+	gchar *utf8_fullpath;
+	int result;
+
+	mono_thread_set_main (mono_thread_current ());
+	mono_runtime_init_main_args (argc, argv, method->klass->image->assembly);
+
 	argc--;
 	argv++;
 	if (mono_method_signature (method)->param_count) {
@@ -1851,6 +1861,26 @@
 	mono_thread_manage ();
 }
 
+
+void
+mono_runtime_ensure_entry_assembly (MonoDomain *domain, MonoAssembly *assembly)
+{
+	if (!domain->entry_assembly) {
+		gchar *str;
+		gchar *config_suffix;
+
+		domain->entry_assembly = assembly;
+		domain->setup->application_base = mono_string_new (domain, assembly->basedir);
+
+		config_suffix = g_strconcat (assembly->aname.name, ".exe.config", NULL);
+		str = g_build_filename (assembly->basedir, config_suffix, NULL);
+		g_free (config_suffix);
+		domain->setup->configuration_file = mono_string_new (domain, str);
+		g_free (str);
+	}
+}
+
+
 /*
  * Execute a standard Main() method (args doesn't contain the
  * executable name).
@@ -1867,21 +1897,7 @@
 	pa [0] = args;
 
 	domain = mono_object_domain (args);
-	if (!domain->entry_assembly) {
-		gchar *str;
-		gchar *config_suffix;
-		MonoAssembly *assembly;
-
-		assembly = method->klass->image->assembly;
-		domain->entry_assembly = assembly;
-		domain->setup->application_base = mono_string_new (domain, assembly->basedir);
-
-		config_suffix = g_strconcat (assembly->aname.name, ".exe.config", NULL);
-		str = g_build_filename (assembly->basedir, config_suffix, NULL);
-		g_free (config_suffix);
-		domain->setup->configuration_file = mono_string_new (domain, str);
-		g_free (str);
-	}
+	mono_runtime_ensure_entry_assembly (domain, method->klass->image->assembly);
 
 	/* FIXME: check signature of method */
 	if (mono_method_signature (method)->ret->type == MONO_TYPE_I4) {
diff -uBbr mono-1.1.7/mono/metadata/object.h mono-1.1.7-patched/mono/metadata/object.h
--- mono-1.1.7/mono/metadata/object.h	2005-02-15 18:48:04.000000000 +0200
+++ mono-1.1.7-patched/mono/metadata/object.h	2005-05-13 18:52:10.000000000 +0300
@@ -214,6 +214,9 @@
 mono_runtime_exec_main	    (MonoMethod *method, MonoArray *args,
 			     MonoObject **exc);
 
+void
+mono_runtime_ensure_entry_assembly (MonoDomain *domain, MonoAssembly *assembly);
+
 gpointer
 mono_load_remote_field (MonoObject *this_obj, MonoClass *klass, MonoClassField *field, gpointer *res);
 
@@ -282,5 +285,6 @@
 MonoObject*  mono_gchandle_get_target  (guint32 gchandle);
 void         mono_gchandle_free        (guint32 gchandle);
 
+void mono_runtime_init_main_args (int argc, char *argv[], MonoAssembly *assembly);
 #endif
 
diff -uBbr mono-1.1.7/mono/metadata/threads.c mono-1.1.7-patched/mono/metadata/threads.c
--- mono-1.1.7/mono/metadata/threads.c	2005-04-30 19:54:12.000000000 +0300
+++ mono-1.1.7-patched/mono/metadata/threads.c	2005-05-13 18:52:10.000000000 +0300
@@ -427,7 +427,7 @@
 	thread_adjust_static_data (thread);
 
 	if (mono_thread_attach_cb) {
-		mono_thread_attach_cb (tid, &tid);
+		mono_thread_attach_cb (tid, -1);
 	}
 
 	return(thread);
diff -uBbr mono-1.1.7/mono/mini/mini.c mono-1.1.7-patched/mono/mini/mini.c
--- mono-1.1.7/mono/mini/mini.c	2005-04-28 22:49:34.000000000 +0300
+++ mono-1.1.7-patched/mono/mini/mini.c	2005-05-13 18:52:10.000000000 +0300
@@ -7458,6 +7458,13 @@
 
 void (*mono_thread_attach_aborted_cb ) (MonoObject *obj) = NULL;
 
+void
+mono_thread_set_attach_aborted_cb (
+    void (*new_mono_thread_attach_aborted_cb ) (MonoObject *obj))
+{
+  	mono_thread_attach_aborted_cb = new_mono_thread_attach_aborted_cb;
+}
+
 static void
 mono_thread_abort_dummy (MonoObject *obj)
 {
